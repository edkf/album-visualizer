/* CSS Variables for dynamic colors */
:root {
  --bg-gradient: #000;
  --text-color: #ffffff;
  --text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

/* Normalize CSS */
*, *::before, *::after {
  box-sizing: border-box;
}

* {
  margin: 0;
  padding: 0;
}

html, body {
  height: 100%;
}

body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}

img, picture, video, canvas, svg {
  display: block;
  max-width: 100%;
}

input, button, textarea, select {
  font: inherit;
}

p, h1, h2, h3, h4, h5, h6 {
  overflow-wrap: break-word;
}

#root, #__next {
  isolation: isolate;
}

/* Dynamic background and text styles */
body {
  background: var(--bg-gradient);
  color: var(--text-color);
  text-shadow: var(--text-shadow);
  min-height: 100vh;
  font-family: system-ui, -apple-system, sans-serif;
  padding: 0;
  margin: 0;
}

/* Cover container - maintains consistent structure */
.cover-container {
  position: relative;
  height: 80vh;
  width: 80vh;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Image - maintains aspect ratio */
.cover {
  height: 100%;
  width: 100%;
  object-fit: cover;
}

/* Placeholder for when no cover or loading */
.cover-placeholder {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #222;
  border-radius: 8px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  transition: opacity 0.3s ease;
}

.cover-placeholder.hidden {
  opacity: 0;
  pointer-events: none;
}

/* Smooth transitions for color changes */
body, * {
  transition: background 0.5s ease, color 0.5s ease;
}

.container {
  display: flex;
  min-height: 100vh;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.info {
  display: none;
}
